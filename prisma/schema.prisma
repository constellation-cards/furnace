generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GameSession {
  gameid            String    @id @db.VarChar(255)
  gamestate         Json
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Deck {
  id                String    @id @db.Uuid @default(uuid())
  name              String    @db.VarChar(255)
  cards             Card[]
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Stack {
  id                String    @id @db.Uuid @default(uuid())
  name              String    @db.VarChar(255)
  cards             Card[]
  icons             String[]
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Face {
  id                String    @id @db.Uuid @default(uuid())
  name              String    @db.VarChar(255)
  backgroundImage   String?
  description       String?
  prompts           String[]
  rule              String?
  card_front        Card?     @relation(name: "front_face")
  card_back         Card?     @relation(name: "back_face")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Card {
  id                String    @id @db.Uuid @default(uuid())
  deck              Deck      @relation(fields: [deckId], references: [id], onDelete: Restrict)
  stack             Stack     @relation(fields: [stackId], references: [id], onDelete: Restrict)
  front             Face      @relation(name: "front_face", fields: [frontId], references: [id], onDelete: Cascade)
  back              Face      @relation(name: "back_face", fields: [backId], references: [id], onDelete: Cascade)
  deckId            String    @db.Uuid
  stackId           String    @db.Uuid
  frontId           String    @db.Uuid
  backId            String    @db.Uuid
  quantity          Int       @default(1)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}