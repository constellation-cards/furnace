generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model ConstellationCardDeck {
  uid               String                    @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  cards             ConstellationCard[]
}

model ConstellationCardStack {
  uid               String                    @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  icons             String[]
  cards             ConstellationCard[]
  presetSources     ConstellationCardPresetSource[]
  state             Json
}

model ConstellationCard {
  uid               String                    @id @default(auto()) @map("_id") @db.ObjectId
  deck              ConstellationCardDeck     @relation(fields: [deckId], references: [uid])
  deckId            String                    @db.ObjectId
  stack             ConstellationCardStack    @relation(fields: [stackId], references: [uid])
  stackId           String                    @db.ObjectId
  front             ConstellationCardFace
  back              ConstellationCardFace
  quantity          Int                       @default(1)
  state             Json
}

type ConstellationCardFace {
  name              String
  backgroundImage   String?
  description       String
  prompts           String[]
  rule              String
}

model ConstellationCardPreset {
  uid               String                    @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String
  sources           ConstellationCardPresetSource[]
}

model ConstellationCardPresetSource {
  uid               String                    @id @default(auto()) @map("_id") @db.ObjectId
  preset            ConstellationCardPreset   @relation(fields: [presetId], references: [uid])
  presetId          String                    @db.ObjectId
  stack             ConstellationCardStack    @relation(fields: [stackId], references: [uid])
  stackId           String                    @db.ObjectId
  quantity          Int
  flipRule          String
}

model GameSession {
  uid               String                    @id @default(auto()) @map("_id") @db.ObjectId
  version           String
  state             Json
}